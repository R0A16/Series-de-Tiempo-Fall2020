auto.assign = FALSE)))
}
#
colnames(prices) <- stock_namelist
#
indexClass(prices) <- "Date"
#
head(prices)
#
logreturns <- diff(log(prices))[-1]
#
head(logreturns)
#****************************************************************************************
# Plot the three series of levells, log-prices and difference
#
plot(prices,
col = c("darkred", "darkblue", "darkgreen"),
main = "Prices of the three select stocks",
legend.loc = "topleft" )
#
plot(log(prices),
col = c("darkred", "darkblue", "darkgreen"),
main = "Log-prices of the three select stocks",
legend.loc = "topleft" )
#
plot(logreturns,
col = c("darkred", "darkblue", "darkgreen"),
main = "Log-returns of the three select stocks",
legend.loc = "topleft" )
#
par(mfrow=c(3, 1))
plot(logreturns$AAPL,
col = "darkred",
main = "Log-returns",
legend.loc = "topleft" )
plot(logreturns$PFE,
col = "darkblue",
main = "Log-returns",
legend.loc = "topleft" )
plot(logreturns$TSLA,
col = "darkgreen",
main = "Log-returns",
legend.loc = "topleft" )
par(mfrow=c(1,1))
# Determinamos Efectos ARCH
MarchTest(logreturns, lag = 3)
ugarch_spec <- ugarchspec(mean.model = list(armaOrder = c(1, 1), include.mean = TRUE),
variance.model = list(model = "eGARCH", garchOrder = c(1, 1)))
# Multivariate model
dcc_spec <- dccspec(uspec = multispec(replicate(ugarch_spec, n = 3)),
VAR = TRUE, lag = 3,
model = "DCC",
dccOrder = c(1, 1))
# Estimate model
garchdcc_fit <- dccfit(dcc_spec,
data = logreturns,
solver = "nlminb")
garchdcc_fit
#****************************************************************************************
#
plot(garchdcc_fit)
library(zoo)
library(xts)
library(TTR)
library(quantmod)
library(parallel)
library(rugarch)
library(rmgarch)
library(MTS)
# Example:
#
getSymbols("TSLA", from = "2020-11-01",
to = "2020-11-30",
auto.assign = FALSE)
#
Ad(getSymbols("TSLA", from = "2020-11-01",
to = "2020-11-30",
auto.assign = FALSE))
# Select a stock set
stock_namelist <- c("AAPL", "PFE", "TSLA")
prices <- xts()
for (stock_index in 1:length(stock_namelist)){
prices <- cbind(prices, Ad(getSymbols(stock_namelist[stock_index],
from = "2011-01-01",
to = "2020-11-30",
auto.assign = FALSE)))
}
#
colnames(prices) <- stock_namelist
#
indexClass(prices) <- "Date"
#
head(prices)
#
logreturns <- diff(log(prices))[-1]
#
head(logreturns)
#****************************************************************************************
# Plot the three series of levells, log-prices and difference
#
plot(prices,
col = c("darkred", "darkblue", "darkgreen"),
main = "Prices of the three select stocks",
legend.loc = "topleft" )
#
plot(log(prices),
col = c("darkred", "darkblue", "darkgreen"),
main = "Log-prices of the three select stocks",
legend.loc = "topleft" )
#
plot(logreturns,
col = c("darkred", "darkblue", "darkgreen"),
main = "Log-returns of the three select stocks",
legend.loc = "topleft" )
#
par(mfrow=c(3, 1))
plot(logreturns$AAPL,
col = "darkred",
main = "Log-returns",
legend.loc = "topleft" )
plot(logreturns$PFE,
col = "darkblue",
main = "Log-returns",
legend.loc = "topleft" )
plot(logreturns$TSLA,
col = "darkgreen",
main = "Log-returns",
legend.loc = "topleft" )
par(mfrow=c(1,1))
library(zoo)
library(xts)
library(TTR)
library(quantmod)
library(parallel)
library(rugarch)
library(rmgarch)
library(MTS)
T
# Example:
#
getSymbols("TSLA", from = "2020-11-01",
to = "2020-11-30",
auto.assign = FALSE)
#
Ad(getSymbols("TSLA", from = "2020-11-01",
to = "2020-11-30",
auto.assign = FALSE))
# Select a stock set
stock_namelist <- c("AAPL", "PFE", "TSLA")
prices <- xts()
for (stock_index in 1:length(stock_namelist)){
prices <- cbind(prices, Ad(getSymbols(stock_namelist[stock_index],
from = "2011-01-01",
to = "2020-11-30",
auto.assign = FALSE)))
}
names(prices)
#
colnames(prices) <- stock_namelist
names(prices)
#
indexClass(prices) <- "Date"
#
head(prices)
#
logreturns <- diff(log(prices))[-1]
#
head(logreturns)
#****************************************************************************************
# Plot the three series of levells, log-prices and difference
#
plot(prices,
col = c("darkred", "darkblue", "darkgreen"),
main = "Prices of the three select stocks",
legend.loc = "topleft" )
#
plot(log(prices),
col = c("darkred", "darkblue", "darkgreen"),
main = "Log-prices of the three select stocks",
legend.loc = "topleft" )
#
plot(logreturns,
col = c("darkred", "darkblue", "darkgreen"),
main = "Log-returns of the three select stocks",
legend.loc = "topleft" )
#
par(mfrow=c(3, 1))
plot(logreturns$AAPL,
col = "darkred",
main = "Log-returns",
legend.loc = "topleft" )
plot(logreturns$PFE,
col = "darkblue",
main = "Log-returns",
legend.loc = "topleft" )
plot(logreturns$TSLA,
col = "darkgreen",
main = "Log-returns",
legend.loc = "topleft" )
par(mfrow=c(1,1))
# Determinamos Efectos ARCH
MarchTest(logreturns, lag = 3)
# Determinamos Efectos ARCH
MarchTest(logreturns, lag = 1)
# Determinamos Efectos ARCH
MarchTest(logreturns, lag = 2)
# Determinamos Efectos ARCH
MarchTest(logreturns, lag = 3)
# Determinamos Efectos ARCH
MarchTest(logreturns, lag = 4)
# Determinamos Efectos ARCH
MarchTest(logreturns, lag = 7)
# Determinamos Efectos ARCH
MarchTest(logreturns, lag = 3)
# Determinamos Efectos ARCH
MarchTest(logreturns, lag = 30)
# Determinamos Efectos ARCH
MarchTest(logreturns, lag = 3)
ugarch_spec <- ugarchspec(mean.model = list(armaOrder = c(1, 1), include.mean = TRUE),
variance.model = list(model = "eGARCH", garchOrder = c(1, 1)))
# Multivariate model
dcc_spec <- dccspec(uspec = multispec(replicate(ugarch_spec, n = 3)),
VAR = TRUE, lag = 3,
model = "DCC",
dccOrder = c(1, 1))
# Estimate model
garchdcc_fit <- dccfit(dcc_spec,
data = logreturns,
solver = "nlminb")
garchdcc_fit
?dccspec
library(zoo)
library(xts) #
library(ARDL)
#****************************************************************************************
# DATOS:
data(denmark)
#?denmark # see for more information
names(denmark)
?auto_ardl
models <- auto_ardl(LRM ~ LRY + IBO + IDE, data = denmark, max_order = 5)
models
names(models)
models$top_orders
models$best_order
models$best_model
BestMod <- models$best_model
summary(BestMod)
UECM_BestMod <- uecm(BestMod)
summary(UECM_BestMod)
?recm
RECM_BestMod <- recm(UECM_BestMod, case = 2)
summary(RECM_BestMod)
bounds_f_test(BestMod, case = 2)
multipliers(BestMod)
Result <- coint_eq(BestMod, case = 2)
Result
Datos <- cbind.zoo(LRM = denmark[,"LRM"], Result)
Datos <- xts(Datos)
plot(Datos, legend.loc = "right")
library(plm)
data("EmplUK", package="plm")
data("Produc", package="plm")
data("Grunfeld", package="plm")
data("Wages", package="plm")
names(Grunfeld)
head(Grunfeld)
Invest <- data.frame(split( Grunfeld$inv, Grunfeld$firm )) # individuals in columns
names(Invest)
names(Invest) <- c("Firm_1", "Firm_2", "Firm_3", "Firm_4", "Firm_5", "Firm_6", "Firm_7",
"Firm_8", "Firm_9", "Firm_10")
names(Invest)
plot(Invest$Firm_1, type = "l", col = 1, ylim = c(0, 1500), lty = 1,
xlab = "Tiempo", ylab = "Real gross investment")
lines(Invest$Firm_2, type = "l", col = 2, lty = 2)
lines(Invest$Firm_3, type = "l", col = 3, lty = 1)
lines(Invest$Firm_4, type = "l", col = 4, lty = 2)
lines(Invest$Firm_5, type = "l", col = 5, lty = 1)
lines(Invest$Firm_6, type = "l", col = 6, lty = 2)
lines(Invest$Firm_7, type = "l", col = 7, lty = 1)
lines(Invest$Firm_8, type = "l", col = 8, lty = 2)
lines(Invest$Firm_9, type = "l", col = 9, lty = 1)
lines(Invest$Firm_10, type = "l", col = 10, lty = 2)
legend("topleft", legend=c("Firm_1", "Firm_2", "Firm_3", "Firm_4", "Firm_5",
"Firm_6", "Firm_7", "Firm_8", "Firm_9", "Firm_10"),
col = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), lty = 1:2)
?purtest
# Consider Levin et al. (2002)
purtest(log(Invest), test = "levinlin", exo = "intercept",
lags = "AIC", pmax = 4)
ts_LInvest <- ts(log(Invest), start = 1935, end = 1954, freq = 1)
ts_DLInvest <- diff(ts(log(Invest), start = 1935, end = 1954, freq = 1),
lag = 1, differences = 1)
View(ts_DLInvest)
View(ts_DLInvest)
View(ts_LInvest)
View(ts_LInvest)
library(plm)
data("EmplUK", package="plm")
data("Produc", package="plm")
data("Grunfeld", package="plm")
data("Wages", package="plm")
names(Grunfeld)
View(Grunfeld)
head(Grunfeld)
Invest <- data.frame(split( Grunfeld$inv, Grunfeld$firm )) # individuals in columns
names(Invest)
View(Invest)
names(Invest) <- c("Firm_1", "Firm_2", "Firm_3", "Firm_4", "Firm_5", "Firm_6", "Firm_7",
"Firm_8", "Firm_9", "Firm_10")
names(Invest)
View(Invest)
plot(Invest$Firm_1, type = "l", col = 1, ylim = c(0, 1500), lty = 1,
xlab = "Tiempo", ylab = "Real gross investment")
lines(Invest$Firm_2, type = "l", col = 2, lty = 2)
lines(Invest$Firm_3, type = "l", col = 3, lty = 1)
lines(Invest$Firm_4, type = "l", col = 4, lty = 2)
lines(Invest$Firm_5, type = "l", col = 5, lty = 1)
lines(Invest$Firm_6, type = "l", col = 6, lty = 2)
lines(Invest$Firm_7, type = "l", col = 7, lty = 1)
lines(Invest$Firm_8, type = "l", col = 8, lty = 2)
lines(Invest$Firm_9, type = "l", col = 9, lty = 1)
lines(Invest$Firm_10, type = "l", col = 10, lty = 2)
legend("topleft", legend=c("Firm_1", "Firm_2", "Firm_3", "Firm_4", "Firm_5",
"Firm_6", "Firm_7", "Firm_8", "Firm_9", "Firm_10"),
col = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), lty = 1:2)
?purtest
# Consider Levin et al. (2002)
purtest(log(Invest), test = "levinlin", exo = "intercept",
lags = "AIC", pmax = 4)
ts_LInvest <- ts(log(Invest), start = 1935, end = 1954, freq = 1)
ts_DLInvest <- diff(ts(log(Invest), start = 1935, end = 1954, freq = 1),
lag = 1, differences = 1)
View(ts_LInvest)
View(ts_LInvest)
View(ts_DLInvest)
#
purtest(ts_LInvest, test = "levinlin", exo = "intercept",
lags = "AIC", pmax = 4)
summary(purtest(ts_LInvest, test = "levinlin", exo = "intercept",
lags = "AIC", pmax = 4))
#
purtest(ts_DLInvest, test = "levinlin", exo = "intercept",
lags = "AIC", pmax = 4)
summary(purtest(ts_DLInvest, test = "levinlin", exo = "intercept",
lags = "AIC", pmax = 4))
purtest(ts_LInvest, test = "ips", exo = "intercept",
lags = "AIC", pmax = 4)
summary(purtest(ts_LInvest, test = "ips", exo = "intercept",
lags = "AIC", pmax = 4))
#
purtest(ts_DLInvest, test = "ips", exo = "intercept",
lags = "AIC", pmax = 4)
summary(purtest(ts_DLInvest, test = "ips", exo = "intercept",
lags = "AIC", pmax = 4))
plot(Invest$Firm_1, type = "l", col = 1, ylim = c(0, 1500), lty = 1,
xlab = "Tiempo", ylab = "Real gross investment")
lines(Invest$Firm_2, type = "l", col = 2, lty = 2)
lines(Invest$Firm_3, type = "l", col = 3, lty = 1)
plot(Invest$Firm_1, type = "l", col = 1, ylim = c(0, 1500), lty = 1,
xlab = "Tiempo", ylab = "Real gross investment")
lines(Invest$Firm_2, type = "l", col = 2, lty = 2)
lines(Invest$Firm_3, type = "l", col = 3, lty = 1)
lines(Invest$Firm_4, type = "l", col = 4, lty = 2)
lines(Invest$Firm_5, type = "l", col = 5, lty = 1)
lines(Invest$Firm_6, type = "l", col = 6, lty = 2)
lines(Invest$Firm_7, type = "l", col = 7, lty = 1)
lines(Invest$Firm_8, type = "l", col = 8, lty = 2)
lines(Invest$Firm_9, type = "l", col = 9, lty = 1)
lines(Invest$Firm_10, type = "l", col = 10, lty = 2)
legend("topleft", legend=c("Firm_1", "Firm_2", "Firm_3", "Firm_4", "Firm_5",
"Firm_6", "Firm_7", "Firm_8", "Firm_9", "Firm_10"),
col = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), lty = 1:2)
# Consider Levin et al. (2002)
purtest(log(Invest), test = "levinlin", exo = "trend",
lags = "AIC", pmax = 4)
library(panelvar)
data("abdata")
names(abdata)
?pvargmm
Arellano_Bond_1991_table4b <- pvargmm(
dependent_vars = c("n"),
lags = 2,
exog_vars = c("w", "wL1", "k", "ys", "ysL1",
"yr1979", "yr1980", "yr1981", "yr1982",
"yr1983", "yr1984"),
transformation = "fd",
data = abdata,
panel_identifier = c("id", "year"),
steps = c("twostep"),
system_instruments = FALSE,
max_instr_dependent_vars = 99,
min_instr_dependent_vars = 2L,
collapse = FALSE)
summary(Arellano_Bond_1991_table4b)
data("Dahlberg")
names(Dahlberg)
ex1_dahlberg_data <- pvargmm(dependent_vars = c("expenditures", "revenues", "grants"),
lags = 1,
transformation = "fod",
data = Dahlberg,
panel_identifier=c("id", "year"),
steps = c("twostep"),
system_instruments = FALSE,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
summary(ex1_dahlberg_data)
library(astsa)
# Series de Tiempo, Diciembre de 2020
# Clase 25. Modelos de Cambio de Regímen (TAR)
#****************************************************************************************
install.packages('astsa')
library(astsa)
flu = scan("flu.dat")
?scan
setwd("/Users/benjaminolivavazquez/Documents/Personal/Cursos_UNAM/SERIES_2021-I/Series-de-Tiempo-Fall2020/Clase_25")
flu <- read.delim("flu.txt")
11*12
flu <- ts(flu)
# Plotting
plot(flu,type="b")
# Plotting
plot(flu, type = "b", color = "darkred")
# Plotting
plot(flu, type = "b", color = "red")
# Plotting
plot(flu, type = "b", col = "red")
# Plotting
plot(flu, type = "b", col = "darkred")
# Plotting
plot(flu, type = "b", col = "darkred", main = "Monthly rates of deaths due to flu in the United States")
y = diff(flu, lag = 1)
?diff
plot(y,type="b")
plot(y, type="b", col = "darkred",
main = "Diff Monthly rates of deaths due to flu in the United States")
# Plotting
plot(flu, type = "b", col = "darkred", ylab = "",
main = "Monthly rates of deaths due to flu in the United States")
plot(y, type="b", col = "darkred", ylab = "",
main = "Diff Monthly rates of deaths due to flu in the United States")
model = ts.intersect(y, lag1y=lag(y,-1), lag2y=lag(y, -2), lag3y=lag(y,-3), lag4y=lag(y, -4))
?ts.intersect
View(model)
D_flu = diff(flu, lag = 1)
# Plotting
plot(flu, type = "b", col = "darkred", ylab = "",
main = "Monthly rates of deaths due to flu in the United States")
plot(D_flu, type="b", col = "darkred", ylab = "",
main = "Diff Monthly rates of deaths due to flu in the United States")
table = ts.intersect(D_flu,
lag1 = lag(D_flu, -1),
lag2 = lag(D_flu, -2),
lag3 = lag(D_flu, -3),
lag4 = lag(D_flu, -4))
x = table[, 1]
P = table[, 2:5]
c = .05 ## Threshold value
less = (P[,1] < c)
x1 = x[less]
P1 = P[less,]
out1 = lm(x1 ~ P1[,1] + P1[,2] + P1[,3] + P1[,4])
summary(out1)
greater = (P[,1]>=c)
x2 = x[greater]
P2 = P[greater,]
out2 = lm(x2 ~ P2[,1] + P2[,2] + P2[,3] + P2[,4])
summary(out2)
res1 = residuals(out1)
res2 = residuals(out2)
less[less==1] = res1
greater[greater==1] = res2
resid = less + greater
acf2(resid)
fit1 = predict(out1)
fit2 = predict(out2)
greater[greater==1] = fit2
fit = less + greater
plot(D_flu, type="b", col = "darkred", ylab = "",
main = "Diff Monthly rates of deaths due to flu in the United States")
lines(fit, col = "red", lty="dashed")
less = (P[,1]<c)
greater = (P[,1]>=c)
fit1 = predict(out1)
fit2 = predict(out2)
less[less==1] = fit1
greater[greater==1] = fit2
fit = less + greater
plot(D_flu, type="b", col = "darkred", ylab = "",
main = "Diff Monthly rates of deaths due to flu in the United States")
lines(fit, col = "red", lty="dashed")
lines(fit, col = "green", lty="dashed")
lines(fit, col = "darkblue", lty="dashed")
install.packages("tsDyn") #if not yet installed
library(tsDyn)
?setar
?setar
flu.tar4.05=setar(D_flu, m = 4, thDelay = 0, th = 0.05)
summary(fD_flu_tar4_05)
summary(D_flu_tar4_05)
D_flu_tar4_05 <- setar(D_flu, m = 4, thDelay = 0, th = 0.05)
summary(D_flu_tar4_05)
plot(D_flu_tar4_05)
D_flu_tar4 <- setar(D_flu, m = 4, thDelay = 0)
summary(D_flu_tar4)
D_flu_tar4 <- setar(D_flu, m = 4, thDelay = 0)
summary(D_flu_tar4)
plot(D_flu_tar4)
